name: test-authorize-collab

on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronized

jobs:
  authorize:
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve the collaborator
        run: echo "PR_AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
        
      - name: Authorize the PR Author
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CI_CLOUD_TOKEN }}
          script: |
            const collab_author = process.env.PR_AUTHOR;
            const isCollaborator = await github.rest.repos.checkCollaborator({
              owner: 'Xilinx',
              repo: 'preflight-check',
              username: collab_author
            });
            console.log(isCollaborator);
            console.log(isCollborator.status);
           
            if (isCollaborator.status == 204) {
              console.log("Author is a trusted outside collaborator: " + collab_author);
            } else if (isCollaborator.status == 404) {
                console.log("Author is not a trusted outside collaborator: "+ collab_author);
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: collab_author + " - is not a collaborator " + "\n Can XRT admins please validate PR"
              });
              process.exit(1);
            } else {
              console.log("Author is not a trusted outside collaborator: "+ collab_author);
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: collab_author + " - is not a collaborator " + "\n Can XRT admins please validate PR"
              });
              process.exit(1);
            }
