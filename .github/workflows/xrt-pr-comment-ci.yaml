name: xrt-pr-comment-ci

on:  
  issue_comment:
    types: [created]

env:  
  RELEASE: '2024.1'
  PIPELINE: 'xrt' 
  ENV: 'prod'  

jobs:     
  check:  
    runs-on: ubuntu-latest
    if: contains('pkbhaga03, sonal, abalasa, stsoe, hcneema, NaAl-Xlnx, maxzhen, houlz0507, chvamshi-xilinx, salindac, dayeh-xilinx, larry9523, sadasivanshaiju, xilinxgitops, dbenusov-xilinx, sabarina, sabarinaxil, manikandan-xilinx, sabarina, SubhedarV', format('{0},', github.actor)) && github.event.comment.body == '/build' && github.event.issue.pull_request
    steps:  
      - name: Check the build comment is from a valid authorizer  
        run: echo "${{ github.actor }} is a valid authorizer, running the build"
      - name: Github API Request
        id: request
        uses: octokit/request-action@v2.0.2
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Get PR informations
        id: pr_data
        run: |
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).head.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).head.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).head.repo.ssh_url }}"
          
  build:
    needs: check 
    strategy:      
      matrix:      
        include:      
          - os: centos78      
            packageType: rpm      
          - os: centos8      
            packageType: rpm      
          - os: rhel9      
            packageType: rpm      
          - os: ubuntu2004      
            packageType: deb      
          - os: ubuntu2204      
            packageType: deb      
        
    runs-on: [self-hosted, Ubuntu-22.04]
    steps:  
      - name: Set env variables    
        run: |    
          echo "Setting environment variables..."      
          echo "XRT_VERSION_PATCH=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV    
          echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV     
    
      - name: Checkout PR   
        uses: actions/checkout@v3 
        with: 
          ref: refs/pull/${{ github.event.issue.number }}/head
          fetch-depth: 0
          path: ${{ github.workspace }}/${{ github.run_number }}  
          submodules: recursive      

      - name: Checkout private repository      
        uses: actions/checkout@v3   
        with:      
          repository: actions-int/composite-workflows
          github-server-url: ${{ secrets.SERVER_URL }}      
          token: ${{ secrets.ACCESS_TOKEN }}      
          path: composite-workflows   
          ref: main
       
    
